{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","firstRender","useRef","useState","inputValue","setInputValue","todos","setTodos","useEffect","current","localStorage","setItem","JSON","stringify","newTodos","getItem","parse","className","onSubmit","e","preventDefault","trim","text","id","uuidv4","autoFocus","type","placeholder","value","onChange","target","map","todo","onClick","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OAgEeA,MA5Df,WACC,IAAMC,EAAcC,kBAAO,GADb,EAEsBC,mBAAS,IAF/B,mBAEPC,EAFO,KAEKC,EAFL,OAGYF,mBAAS,IAHrB,mBAGPG,EAHO,KAGAC,EAHA,KAkCd,OAbAC,qBAAU,WACLP,EAAYQ,QACfR,EAAYQ,SAAU,EAEtBC,aAAaC,QAAQ,OAAQC,KAAKC,UAAL,YAAmBP,OAE/C,CAACA,IAEJE,qBAAU,WACT,IAAMM,EAAWJ,aAAaK,QAAQ,QACrB,OAAbD,GAAmBP,EAASK,KAAKI,MAAL,sBAAeV,GAAf,CAAsBQ,QACpD,IAGF,qBAAKG,UAAU,MAAf,SACC,sBAAKA,UAAU,YAAf,UACC,uBAAMC,SAjCO,SAACC,GAChBA,EAAEC,iBAEwB,KAAtBhB,EAAWiB,SAEfd,EAAS,GAAD,mBAAKD,GAAL,CAAY,CACnBgB,KAAMlB,EACNmB,GAAIC,kBAGLnB,EAAc,MAuBZ,UACC,uBACCoB,WAAS,EACTC,KAAK,OACLC,YAAY,gBACZC,MAAOxB,EACPyB,SAAU,SAACV,GAAD,OAAOd,EAAcc,EAAEW,OAAOF,UAEzC,wBAAQF,KAAK,SAAb,oBAGApB,EAAMyB,KAAI,SAACC,GAAD,OACT,sBAAmBf,UAAU,OAA7B,UACC,4BAAIe,EAAKV,OACT,mBAAGW,QAAS,kBAlCEV,EAkCeS,EAAKT,QAjCvChB,EAASD,EAAM4B,QAAO,SAAAF,GAAI,OAAIA,EAAKT,KAAOA,MADxB,IAACA,GAkCyBN,UAAU,uBAFxCe,EAAKT,aCzCNY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0eef0540.chunk.js","sourcesContent":["import React, {useState, useEffect, useRef} from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport './App.css';\n\nfunction App() {\n\tconst firstRender = useRef(true);\n\tconst [inputValue, setInputValue] = useState('');\n\tconst [todos, setTodos] = useState([]);\n\tconst addTodo = (e) => {\n\t\te.preventDefault();\n\n\t\tif (inputValue.trim() === '') return;\n\n\t\tsetTodos([...todos, {\n\t\t\ttext: inputValue,\n\t\t\tid: uuidv4()\n\t\t}]);\n\n\t\tsetInputValue('');\n\t};\n\n\tconst removeTodo = (id) => {\n\t\tsetTodos(todos.filter(todo => todo.id !== id));\n\t};\n\n\tuseEffect(() => {\n\t\tif (firstRender.current) {\n\t\t\tfirstRender.current = false;\n\t\t} else {\n\t\t\tlocalStorage.setItem(\"Todo\", JSON.stringify([...todos]));\n\t\t}\n\t}, [todos]);\n\n\tuseEffect(() => {\n\t\tconst newTodos = localStorage.getItem(\"Todo\");\n\t\tif (newTodos !== null) setTodos(JSON.parse([...todos, newTodos]));\n\t}, []);\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<div className=\"container\">\n\t\t\t\t<form onSubmit={addTodo}>\n\t\t\t\t\t<input\n\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"Add a task...\"\n\t\t\t\t\t\tvalue={inputValue}\n\t\t\t\t\t\tonChange={(e) => setInputValue(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t<button type=\"submit\">Add</button>\n\t\t\t\t</form>\n\t\t\t\t{\n\t\t\t\t\ttodos.map((todo) => (\n\t\t\t\t\t\t<div key={todo.id} className=\"todo\">\n\t\t\t\t\t\t\t<p>{todo.text}</p>\n\t\t\t\t\t\t\t<i onClick={() => removeTodo(todo.id)} className=\"fas fa-trash-alt\"></i>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))\n\t\t\t\t}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}