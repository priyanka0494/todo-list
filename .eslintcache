[{"C:\\Priyanka\\Learnings\\Practice\\Udemy_Practice\\9 React Projects\\todo-list\\src\\index.js":"1","C:\\Priyanka\\Learnings\\Practice\\Udemy_Practice\\9 React Projects\\todo-list\\src\\App.js":"2","C:\\Priyanka\\Learnings\\Practice\\Udemy_Practice\\9 React Projects\\todo-list\\src\\reportWebVitals.js":"3"},{"size":500,"mtime":1608024663046,"results":"4","hashOfConfig":"5"},{"size":1417,"mtime":1610540223082,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1608024663046,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"12kovvt",{"filePath":"11","messages":"12","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13","usedDeprecatedRules":"10"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\Priyanka\\Learnings\\Practice\\Udemy_Practice\\9 React Projects\\todo-list\\src\\index.js",[],["17","18"],"C:\\Priyanka\\Learnings\\Practice\\Udemy_Practice\\9 React Projects\\todo-list\\src\\App.js",["19"],"import React, {useState, useEffect, useRef} from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport './App.css';\n\nfunction App() {\n\tconst firstRender = useRef(true);\n\tconst [inputValue, setInputValue] = useState('');\n\tconst [todos, setTodos] = useState([]);\n\tconst addTodo = (e) => {\n\t\te.preventDefault();\n\n\t\tif (inputValue.trim() === '') return;\n\n\t\tsetTodos([...todos, {\n\t\t\ttext: inputValue,\n\t\t\tid: uuidv4()\n\t\t}]);\n\n\t\tsetInputValue('');\n\t};\n\n\tconst removeTodo = (id) => {\n\t\tsetTodos(todos.filter(todo => todo.id !== id));\n\t};\n\n\tuseEffect(() => {\n\t\tif (firstRender.current) {\n\t\t\tfirstRender.current = false;\n\t\t} else {\n\t\t\tlocalStorage.setItem(\"Todo\", JSON.stringify([...todos]));\n\t\t}\n\t}, [todos]);\n\n\tuseEffect(() => {\n\t\tconst newTodos = localStorage.getItem(\"Todo\");\n\t\tif (newTodos !== null) setTodos(JSON.parse([...todos, newTodos]));\n\t}, []);\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<div className=\"container\">\n\t\t\t\t<form onSubmit={addTodo}>\n\t\t\t\t\t<input\n\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"Add a task...\"\n\t\t\t\t\t\tvalue={inputValue}\n\t\t\t\t\t\tonChange={(e) => setInputValue(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t<button type=\"submit\">Add</button>\n\t\t\t\t</form>\n\t\t\t\t{\n\t\t\t\t\ttodos.map((todo) => (\n\t\t\t\t\t\t<div key={todo.id} className=\"todo\">\n\t\t\t\t\t\t\t<p>{todo.text}</p>\n\t\t\t\t\t\t\t<i onClick={() => removeTodo(todo.id)} className=\"fas fa-trash-alt\"></i>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))\n\t\t\t\t}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","C:\\Priyanka\\Learnings\\Practice\\Udemy_Practice\\9 React Projects\\todo-list\\src\\reportWebVitals.js",[],["20","21"],{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","severity":1,"message":"27","line":37,"column":5,"nodeType":"28","endLine":37,"endColumn":7,"suggestions":"29"},{"ruleId":"22","replacedBy":"30"},{"ruleId":"24","replacedBy":"31"},"no-native-reassign",["32"],"no-negated-in-lhs",["33"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'todos'. Either include it or remove the dependency array. You can also do a functional update 'setTodos(t => ...)' if you only need 'todos' in the 'setTodos' call.","ArrayExpression",["34"],["32"],["33"],"no-global-assign","no-unsafe-negation",{"desc":"35","fix":"36"},"Update the dependencies array to be: [todos]",{"range":"37","text":"38"},[842,844],"[todos]"]